#!/bin/bash
# version 1.1 2021-12-16 (YYYY-MM-DD)
# 1.1 - Added error output to specific file, for post parsing reasons
# 1.0 - Initial release
#
# Author: Truesec Cyber Security Incident Response Team
# Website: https://truesec.com/
# Created: 2021-12-12
#
# Instructions:
# Place the script in /tmp folder and execute from there,
# the script will create a subfolder where it will create the result files.
#
# The script scans the file system starting at the path defined in BASE_DIR.
# Consider changing this to a specific path if required.

BASE_DIR=${1:-'/'} # Allows user to provide root_search directory
TIMESTAMP=$(date +%Y%m%d.%H%M%S)
HOSTNAME=$(hostname)
WORKDIR=/tmp/ts-log4j-inventory-${TIMESTAMP}
TRANSCRIPT=${WORKDIR}/${HOSTNAME}_transcript_${TIMESTAMP}.txt
UNPACK_DIR=${WORKDIR}/unpacked
POTENTIAL_MATCHES=${WORKDIR}/${HOSTNAME}_java_files_${TIMESTAMP}.txt
MATCHES=$WORKDIR/${HOSTNAME}_temp_matches_${TIMESTAMP}.txt
FINAL_OUTPUT=${WORKDIR}/${HOSTNAME}_matches_${TIMESTAMP}.txt
ERRORS=${WORKDIR}/${HOSTNAME}_errors_${TIMESTAMP}.txt

# 1. Find all files across the file-system ending with:
#       - jar, war or ear
#
# 2. For each matching file, see if it matches some commonly observed names
#       - log4j, jndilookup, jndimanager, socketnode
#
# 3. For each next match unpack and grep for
#
# 4. Count matches
#
# 5. Prepare output
#
# 6. Clean-up

mkdir $WORKDIR

# (1) Find files
find $BASE_DIR -type f \( -name "*.jar" -o -name "*.war" -o -name "*.ear" ')' 1> $POTENTIAL_MATCHES 2>> $ERRORS

# (2) Match and unpack

while read f; do
#for f in $(cat $POTENTIAL_MATCHES); do
        grep -iE "log4j|jndilookup|jndimanager|socketnode" "$f" 1>> $TRANSCRIPT 2>> $ERRORS

        PACKAGE_LOCATION=$(echo "$f" | grep -oE "^/.*/" 2>> $ERRORS)
        PACKAGE_NAME=$(echo "$f" | grep -oE "[a-zA-Z._0-9 \-]*\.[a-zA-Z]{3}$" 2>> $ERRORS)

        mkdir -p "${UNPACK_DIR}/${PACKAGE_NAME}"

        unzip -o -d "${UNPACK_DIR}/${PACKAGE_NAME}" "$f" "*.jar" 1>> $TRANSCRIPT 2>> $ERRORS 
        grep -irE "log4j|jndilookup|jndimanager|socketnode" $UNPACK_DIR 1> $WORKDIR/tmp_file 2>> $ERRORS

        while read match; do
                NAME=$(echo $match | grep -oE "[a-zA-Z._0-9 \-]*\.[a-zA-Z]{3} matches" 2>> $ERRORS)
                echo "$PACKAGE_LOCATION$PACKAGE_NAME/$NAME" 1>> $TRANSCRIPT
        done < $WORKDIR/tmp_file

        rm $WORKDIR/tmp_file

        if echo $WORKDIR | grep -q "/tmp/" 2>> $ERRORS; then
                # Scary rm -rf ... ensure $UNPACK_DIR is at least /tmp/

                rm -rf $UNPACK_DIR/
        fi


done < $POTENTIAL_MATCHES

grep -iv "caution: filename" $ERRORS > $WORKDIR/tmp_file
mv $WORKDIR/tmp_file $ERRORS

# (4) Count matches
grep -i "matches" $TRANSCRIPT > $MATCHES

# (5) Prepare output

cat $MATCHES | grep -oE "/.*\.[a-z]{3}" > $FINAL_OUTPUT 2>> $ERRORS

echo "Find results in $FINAL_OUTPUT"

# (6) Clean-up

rm $MATCHES
